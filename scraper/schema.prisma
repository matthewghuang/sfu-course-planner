datasource db {
	provider = "mysql"
	url = "mysql://root:my_root_password@localhost:3306/sfu_course_data"
}

generator client {
  provider = "prisma-client-js"
}

model CourseOutline {
	id Int @id @default(autoincrement())

	info CourseInfo?
	instructor CourseInstructor[]
	courseSchedule CourseSchedule[]
	grade CourseGrade[]
	requiredText CourseRequiredText[]
}

model CourseInfo {
	id Int @id @default(autoincrement())

	name                    String
	title                   String
	description             String?  @db.Text
	dept                    String
	number                  String // e.g., "100W"
	section                 String @db.VarChar(10)// e.g., "D100"
	classNumber             String // e.g., "2921"
	term                    String // e.g., "Summer 2015"
	units                   String? // "3" - kept as String, as in JSON
	type                    String // "e"
	degreeLevel             String // "UGRD"
	deliveryMethod          String?
	designation             String?
	outlinePath             String
	specialTopic            String?
	shortNote               String?
	courseDetails           String?  @db.Text
	educationalGoals        String?  @db.Text
	gradingNotes            String?  @db.Text
	prerequisites           String?  @db.Text
	corequisites            String? @db.Text
	registrarNotes          String?  @db.Text
	departmentalUgradNotes  String? @db.Text
	departmentalGradNotes  String? @db.Text
	requiredReadingNotes    String? @db.Text
	notes                   String? @db.Text
	codeNotes String? @db.Text
	materials String? @db.Text
	requirements String? @db.Text
	graduateStudiesNotes String? @db.Text

	courseOutlineId Int @unique
	courseOutline CourseOutline @relation(fields: [courseOutlineId], references: [id], onDelete: Cascade)
}

// // Model for objects in the "instructor" array
model CourseInstructor {
	id Int @id @default(autoincrement())
	name        String // Mark Fettes
	commonName  String? // Mark
	firstName   String // Mark
	lastName    String // Fettes
	email       String? // mtfettes@sfu.ca
	phone       String? // 778-782-4489
	office      String?
	officeHours String? @db.Text
	profileUrl  String?
	roleCode    String  // "PI"

	courseOutlineId Int
	courseOutline CourseOutline @relation(fields: [courseOutlineId], references: [id], onDelete: Cascade)
}

// Model for objects in the "courseSchedule" array
model CourseSchedule {
	id Int @id @default(autoincrement())
	sectionCode String  // "SEM"
	campus      String?
	days        String?  // "Mo, We"
	startTime   String?  // "9:30"
	endTime     String?  // "13:20"
	startDate   String?  // Kept as String, not valid ISO 8601
	endDate     String?  // Kept as String, not valid ISO 8601
	isExam      Boolean

	courseOutlineId Int
	courseOutline CourseOutline @relation(fields: [courseOutlineId], references: [id], onDelete: Cascade)
}

// Model for objects in the "grades" array
model CourseGrade {
	id Int @id @default(autoincrement())
	description String @db.Text
	weight      String? // "25" - kept as String, as in JSON

	courseOutlineId Int
	courseOutline CourseOutline @relation(fields: [courseOutlineId], references: [id], onDelete: Cascade)
}

// Model for objects in the "requiredText" array
model CourseRequiredText {
	id Int @id @default(autoincrement())
	details String @db.Text
	isbn String?

	courseOutlineId Int
	courseOutline CourseOutline @relation(fields: [courseOutlineId], references: [id], onDelete: Cascade)
}